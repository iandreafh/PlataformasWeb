// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlataformasWeb.Data;

#nullable disable

namespace PlataformasWeb.Migrations
{
    [DbContext(typeof(PlatformInfoContext))]
    [Migration("20221123072659_PlataformasInfoInitialMigration")]
    partial class PlataformasInfoInitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("PlataformasWeb.Data.Entities.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<int>("PlatformId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PlatformId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Película romántica de época basada en una novela.",
                            PlatformId = 1,
                            Title = "Orgullo y Prejuicio"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Película de ciencia ficción sobre la galaxia.",
                            PlatformId = 1,
                            Title = "Star Wars"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Película de comedia americana sobre un grupo de amigos.",
                            PlatformId = 2,
                            Title = "Niños grandes"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Película musical de animación sobre un teatro de animales.",
                            PlatformId = 2,
                            Title = "Canta"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Película musical sobre un grupo de adolescentes que van a un campamento de verano.",
                            PlatformId = 3,
                            Title = "Camp Rock"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Película infantil de animación sobre el valor de la amistad y la familia.",
                            PlatformId = 3,
                            Title = "Hermano Oso"
                        });
                });

            modelBuilder.Entity("PlataformasWeb.Data.Entities.Platform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Platforms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "The reliable one, always creating new content.",
                            Title = "Netflix"
                        },
                        new
                        {
                            Id = 2,
                            Description = "The cheapest one, accesible for everyone.",
                            Title = "Amazon Prime Video"
                        },
                        new
                        {
                            Id = 3,
                            Description = "The youngest of them all.",
                            Title = "Disney+"
                        });
                });

            modelBuilder.Entity("PlataformasWeb.Data.Entities.Movie", b =>
                {
                    b.HasOne("PlataformasWeb.Data.Entities.Platform", "Platform")
                        .WithMany("Movies")
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Platform");
                });

            modelBuilder.Entity("PlataformasWeb.Data.Entities.Platform", b =>
                {
                    b.Navigation("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
